/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-10-10 05:11:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class eg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<body>\n");

Connection cn = null;
try
{
Class.forName("com.mysql.cj.jdbc.Driver");
cn =
DriverManager.getConnection("jdbc:mysql://localhost:3306/syca221574","syca221574","");
DatabaseMetaData dbmt = cn.getMetaData();
ResultSet rs = dbmt.getTables(null,null,null,new String[]{"TABLE"});

      out.write("\n");
      out.write("<h3>Database Information</h3><br>\n");
      out.write("<table border=\"1\">\n");
      out.write("<tr>\n");
      out.write("<th>SR No.</th>\n");
      out.write("<th>Database Information</th>\n");
      out.write("<th>Output</th>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>1</td>\n");
      out.write("<td>Database Driver Name</td>\n");
      out.write("<td>");
 out.println(dbmt.getDriverName()); 
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>2</td>\n");
      out.write("<td>Database Driver Version</td>\n");
      out.write("<td>");
 out.println(dbmt.getDriverVersion()); 
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>3</td>\n");
      out.write("<td>Database UserName</td>\n");
      out.write("<td>");
 out.println(dbmt.getUserName()); 
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("</td>\n");
      out.write("%></td>\n");
      out.write("<tr>\n");
      out.write("<td>4</td>\n");
      out.write("<td>Database Product Name</td>\n");
      out.write("<td>");
 out.println(dbmt.getDatabaseProductName()); 
      out.write("\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td>5</td>\n");
      out.write("<td>Database Product Version</td>\n");
      out.write("<td>");
 out.println(dbmt.getDatabaseProductVersion());
1</tr>
</table>
<br>
<h3>Table Name</h3><br>
<table border="1">
<tr>
<th>SR No.</th>
<th>Table Name</th>
</tr>
<%

      out.write("\n");
      out.write("</td>\n");


      out.write('\n');

int i = 1;
while(rs.next())
{
<tr>
<td><% out.println(i); 
      out.write("</td>\n");
      out.write("<td>");
 out.println(rs.getString("TABLE_NAME")); 
      out.write("\n");
      out.write("</tr>\n");
      out.write("i++;\n");
      out.write("}\n");
      out.write("</table>\n");
      out.write("}\n");
      out.write("catch(Exception e)\n");
      out.write("{\n");
      out.write("out.println(e);\n");
      out.write("}\n");
      out.write("finally\n");
      out.write("{\n");
      out.write("try\n");
      out.write("{\n");
      out.write("cn.close();\n");
      out.write("}\n");
      out.write("catch(SQLException se)\n");
      out.write("{\n");
      out.write("out.println(se);\n");
      out.write("}\n");
      out.write("}\n");
      out.write("%>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
